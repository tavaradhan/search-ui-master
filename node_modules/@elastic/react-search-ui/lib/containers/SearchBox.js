"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SearchBoxContainer = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = require("react");

var _reactSearchUiViews = require("@elastic/react-search-ui-views");

var _2 = require("..");

var _types = require("../types");

var _excluded = ["autocompleteMinimumCharacters", "autocompleteResults", "autocompleteSuggestions", "autocompletedResults", "autocompletedSuggestions", "className", "autocompleteView", "inputProps", "inputView", "onSelectAutocomplete", "onSubmit", "searchTerm", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var SearchBoxContainer = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(SearchBoxContainer, _Component);

  var _super = _createSuper(SearchBoxContainer);

  function SearchBoxContainer() {
    var _this;

    (0, _classCallCheck2.default)(this, SearchBoxContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      isFocused: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFocus", function () {
      _this.setState({
        isFocused: true
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleBlur", function () {
      _this.setState({
        isFocused: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "completeSuggestion", function (searchTerm) {
      var _this$props = _this.props,
          shouldClearFilters = _this$props.shouldClearFilters,
          setSearchTerm = _this$props.setSearchTerm;
      setSearchTerm(searchTerm, {
        shouldClearFilters: shouldClearFilters
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSubmit", function (e) {
      var _this$props2 = _this.props,
          shouldClearFilters = _this$props2.shouldClearFilters,
          searchTerm = _this$props2.searchTerm,
          setSearchTerm = _this$props2.setSearchTerm;
      e.preventDefault();
      setSearchTerm(searchTerm, {
        shouldClearFilters: shouldClearFilters
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function (value) {
      var _this$props3 = _this.props,
          autocompleteMinimumCharacters = _this$props3.autocompleteMinimumCharacters,
          autocompleteResults = _this$props3.autocompleteResults,
          autocompleteSuggestions = _this$props3.autocompleteSuggestions,
          shouldClearFilters = _this$props3.shouldClearFilters,
          searchAsYouType = _this$props3.searchAsYouType,
          setSearchTerm = _this$props3.setSearchTerm,
          debounceLength = _this$props3.debounceLength;

      var options = _objectSpread(_objectSpread({
        autocompleteMinimumCharacters: autocompleteMinimumCharacters
      }, (autocompleteResults || autocompleteSuggestions || searchAsYouType) && {
        debounce: debounceLength || 200
      }), {}, {
        shouldClearFilters: shouldClearFilters,
        refresh: !!searchAsYouType,
        autocompleteResults: !!autocompleteResults,
        autocompleteSuggestions: !!autocompleteSuggestions
      });

      setSearchTerm(value, options);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNotifyAutocompleteSelected", function (selection) {
      var _this$props4 = _this.props,
          autocompleteResults = _this$props4.autocompleteResults,
          trackAutocompleteClickThrough = _this$props4.trackAutocompleteClickThrough; // Because suggestions don't count as clickthroughs, only
      // results

      if (autocompleteResults && autocompleteResults.shouldTrackClickThrough !== false && !selection.suggestion) {
        var _autocompleteResults$ = autocompleteResults.clickThroughTags,
            clickThroughTags = _autocompleteResults$ === void 0 ? [] : _autocompleteResults$;
        var id = selection.id.raw;
        trackAutocompleteClickThrough(id, clickThroughTags);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "defaultOnSelectAutocomplete", function (selection) {
      if (!selection) return;
      var autocompleteResults = _this.props.autocompleteResults;

      _this.handleNotifyAutocompleteSelected(selection);

      if (!selection.suggestion) {
        var url = selection[autocompleteResults.urlField] ? selection[autocompleteResults.urlField].raw : "";

        if (url) {
          var target = autocompleteResults.linkTarget || "_self";
          window.open(url, target);
        }
      } else {
        _this.completeSuggestion(selection.suggestion);
      }
    });
    return _this;
  }

  (0, _createClass2.default)(SearchBoxContainer, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var isFocused = this.state.isFocused;
      var _this$props5 = this.props,
          autocompleteMinimumCharacters = _this$props5.autocompleteMinimumCharacters,
          autocompleteResults = _this$props5.autocompleteResults,
          autocompleteSuggestions = _this$props5.autocompleteSuggestions,
          autocompletedResults = _this$props5.autocompletedResults,
          autocompletedSuggestions = _this$props5.autocompletedSuggestions,
          className = _this$props5.className,
          autocompleteView = _this$props5.autocompleteView,
          inputProps = _this$props5.inputProps,
          inputView = _this$props5.inputView,
          onSelectAutocomplete = _this$props5.onSelectAutocomplete,
          onSubmit = _this$props5.onSubmit,
          searchTerm = _this$props5.searchTerm,
          view = _this$props5.view,
          rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);
      var View = view || _reactSearchUiViews.SearchBox;
      var useAutocomplete = (!!autocompleteResults || !!autocompleteSuggestions) && searchTerm.length >= autocompleteMinimumCharacters;
      var autocompletedSuggestionsCount = Object.entries(autocompletedSuggestions // eslint-disable-next-line no-unused-vars
      ).reduce(function (acc, _ref) {
        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            _ = _ref2[0],
            value = _ref2[1];

        return acc + value.length;
      }, 0);
      var allAutocompletedItemsCount = autocompletedSuggestionsCount + autocompletedResults.length;
      var handleOnSelectAutocomplete;

      if (onSelectAutocomplete) {
        handleOnSelectAutocomplete = function handleOnSelectAutocomplete(selection) {
          onSelectAutocomplete(selection, {
            notifyAutocompleteSelected: _this2.handleNotifyAutocompleteSelected,
            completeSuggestion: _this2.completeSuggestion,
            autocompleteResults: _this2.props.autocompleteResults
          }, _this2.defaultOnSelectAutocomplete);
        };
      }

      return View(_objectSpread({
        allAutocompletedItemsCount: allAutocompletedItemsCount,
        autocompleteView: autocompleteView,
        autocompleteResults: autocompleteResults,
        autocompleteSuggestions: autocompleteSuggestions,
        autocompletedResults: autocompletedResults,
        autocompletedSuggestions: autocompletedSuggestions,
        className: className,
        autocompletedSuggestionsCount: autocompletedSuggestionsCount,
        completeSuggestion: this.completeSuggestion,
        isFocused: isFocused,
        notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,
        onChange: function onChange(value) {
          return _this2.handleChange(value);
        },
        onSelectAutocomplete: handleOnSelectAutocomplete || this.defaultOnSelectAutocomplete,
        onSubmit: onSubmit ? function (e) {
          e.preventDefault();
          onSubmit(searchTerm);
        } : this.handleSubmit,
        useAutocomplete: useAutocomplete,
        value: searchTerm,
        inputProps: _objectSpread({
          onFocus: this.handleFocus,
          onBlur: this.handleBlur
        }, inputProps),
        inputView: inputView
      }, rest));
    }
  }]);
  return SearchBoxContainer;
}(_react.Component);

exports.SearchBoxContainer = SearchBoxContainer;
(0, _defineProperty2.default)(SearchBoxContainer, "propTypes", {
  // Props
  autocompleteMinimumCharacters: _propTypes.default.number,
  autocompleteResults: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
    clickThroughTags: _propTypes.default.arrayOf(_propTypes.default.string),
    linkTarget: _propTypes.default.string,
    sectionTitle: _propTypes.default.string,
    shouldTrackClickThrough: _propTypes.default.bool,
    titleField: _propTypes.default.string.isRequired,
    urlField: _propTypes.default.string.isRequired
  })]),
  autocompleteSuggestions: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.exact({
    sectionTitle: _propTypes.default.string
  }), _propTypes.default.objectOf(_propTypes.default.exact({
    sectionTitle: _propTypes.default.string
  }))]),
  autocompleteView: _propTypes.default.func,
  className: _propTypes.default.string,
  shouldClearFilters: _propTypes.default.bool,
  debounceLength: _propTypes.default.number,
  inputProps: _propTypes.default.object,
  inputView: _propTypes.default.func,
  onSelectAutocomplete: _propTypes.default.func,
  onSubmit: _propTypes.default.func,
  searchAsYouType: _propTypes.default.bool,
  view: _propTypes.default.func,
  // State
  autocompletedResults: _propTypes.default.arrayOf(_types.Result).isRequired,
  autocompletedSuggestions: _propTypes.default.objectOf(_propTypes.default.arrayOf(_types.Suggestion)).isRequired,
  searchTerm: _propTypes.default.string.isRequired,
  // Actions
  setSearchTerm: _propTypes.default.func.isRequired,
  trackAutocompleteClickThrough: _propTypes.default.func.isRequired
});
(0, _defineProperty2.default)(SearchBoxContainer, "defaultProps", {
  autocompleteMinimumCharacters: 0,
  shouldClearFilters: true
});

var _default = (0, _2.withSearch)(function (_ref3) {
  var autocompletedResults = _ref3.autocompletedResults,
      autocompletedSuggestions = _ref3.autocompletedSuggestions,
      searchTerm = _ref3.searchTerm,
      setSearchTerm = _ref3.setSearchTerm,
      trackAutocompleteClickThrough = _ref3.trackAutocompleteClickThrough;
  return {
    autocompletedResults: autocompletedResults,
    autocompletedSuggestions: autocompletedSuggestions,
    searchTerm: searchTerm,
    setSearchTerm: setSearchTerm,
    trackAutocompleteClickThrough: trackAutocompleteClickThrough
  };
})(SearchBoxContainer);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,