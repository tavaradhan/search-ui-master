"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SortingContainer = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = require("react");

var _ = require("..");

var _reactSearchUiViews = require("@elastic/react-search-ui-views");

var _SortList = _interopRequireDefault(require("../types/SortList"));

var _types = require("../types");

var _excluded = ["className", "label", "setSort", "sortDirection", "sortField", "sortList", "sortOptions", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function findSortOption(sortOptions, sortData) {
  if (sortData.indexOf("|||") === -1) {
    return sortOptions.find(function (option) {
      return JSON.stringify(option.value) === sortData;
    });
  }

  var _sortData$split = sortData.split("|||"),
      _sortData$split2 = (0, _slicedToArray2.default)(_sortData$split, 2),
      value = _sortData$split2[0],
      direction = _sortData$split2[1];

  return sortOptions.find(function (option) {
    return option.value === value && option.direction === direction;
  });
}

function formatValue(sortField, sortDirection, sortList) {
  if (sortList && sortList.length > 0) {
    return JSON.stringify(sortList);
  }

  return "".concat(sortField, "|||").concat(sortDirection);
}

function formatSelectValues(sortOption) {
  if (Array.isArray(sortOption.value)) {
    // save value as string for comparison
    return JSON.stringify(sortOption.value);
  } else {
    return formatValue(sortOption.value, sortOption.direction);
  }
}

function formatSelectOption(sortOption) {
  return {
    label: sortOption.name,
    value: formatSelectValues(sortOption)
  };
}

var SortingContainer = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(SortingContainer, _Component);

  var _super = _createSuper(SortingContainer);

  function SortingContainer() {
    (0, _classCallCheck2.default)(this, SortingContainer);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(SortingContainer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          label = _this$props.label,
          setSort = _this$props.setSort,
          sortDirection = _this$props.sortDirection,
          sortField = _this$props.sortField,
          sortList = _this$props.sortList,
          sortOptions = _this$props.sortOptions,
          view = _this$props.view,
          rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      var View = view || _reactSearchUiViews.Sorting;
      return View(_objectSpread({
        className: className,
        label: label,
        onChange: function onChange(o) {
          var sortOption = findSortOption(sortOptions, o);
          setSort(sortOption.value, sortOption.direction);
        },
        options: sortOptions.map(formatSelectOption),
        value: formatValue(sortField, sortDirection, sortList)
      }, rest));
    }
  }]);
  return SortingContainer;
}(_react.Component);

exports.SortingContainer = SortingContainer;
(0, _defineProperty2.default)(SortingContainer, "propTypes", {
  // Props
  className: _propTypes.default.string,
  label: _propTypes.default.string,
  sortOptions: _propTypes.default.arrayOf(_types.SortOption).isRequired,
  view: _propTypes.default.func,
  // State
  sortDirection: _propTypes.default.oneOf(["asc", "desc", ""]),
  sortField: _propTypes.default.string,
  sortList: _SortList.default,
  // Actions
  setSort: _propTypes.default.func.isRequired
});

var _default = (0, _.withSearch)(function (_ref) {
  var sortDirection = _ref.sortDirection,
      sortField = _ref.sortField,
      sortList = _ref.sortList,
      setSort = _ref.setSort;
  return {
    sortDirection: sortDirection,
    sortField: sortField,
    sortList: sortList,
    setSort: setSort
  };
})(SortingContainer);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250YWluZXJzL1NvcnRpbmcuanMiXSwibmFtZXMiOlsiZmluZFNvcnRPcHRpb24iLCJzb3J0T3B0aW9ucyIsInNvcnREYXRhIiwiaW5kZXhPZiIsImZpbmQiLCJvcHRpb24iLCJKU09OIiwic3RyaW5naWZ5IiwidmFsdWUiLCJzcGxpdCIsImRpcmVjdGlvbiIsImZvcm1hdFZhbHVlIiwic29ydEZpZWxkIiwic29ydERpcmVjdGlvbiIsInNvcnRMaXN0IiwibGVuZ3RoIiwiZm9ybWF0U2VsZWN0VmFsdWVzIiwic29ydE9wdGlvbiIsIkFycmF5IiwiaXNBcnJheSIsImZvcm1hdFNlbGVjdE9wdGlvbiIsImxhYmVsIiwibmFtZSIsIlNvcnRpbmdDb250YWluZXIiLCJwcm9wcyIsImNsYXNzTmFtZSIsInNldFNvcnQiLCJ2aWV3IiwicmVzdCIsIlZpZXciLCJTb3J0aW5nIiwib25DaGFuZ2UiLCJvIiwib3B0aW9ucyIsIm1hcCIsIkNvbXBvbmVudCIsIlByb3BUeXBlcyIsInN0cmluZyIsImFycmF5T2YiLCJTb3J0T3B0aW9uIiwiaXNSZXF1aXJlZCIsImZ1bmMiLCJvbmVPZiIsIlNvcnRMaXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLGNBQVQsQ0FBd0JDLFdBQXhCLEVBQXFDQyxRQUFyQyxFQUErQztBQUM3QyxNQUFJQSxRQUFRLENBQUNDLE9BQVQsQ0FBaUIsS0FBakIsTUFBNEIsQ0FBQyxDQUFqQyxFQUFvQztBQUNsQyxXQUFPRixXQUFXLENBQUNHLElBQVosQ0FDTCxVQUFBQyxNQUFNO0FBQUEsYUFBSUMsSUFBSSxDQUFDQyxTQUFMLENBQWVGLE1BQU0sQ0FBQ0csS0FBdEIsTUFBaUNOLFFBQXJDO0FBQUEsS0FERCxDQUFQO0FBR0Q7O0FBRUQsd0JBQTJCQSxRQUFRLENBQUNPLEtBQVQsQ0FBZSxLQUFm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Q0FBaEIsQ0FQRTtBQVFqQjlCLEVBQUFBLFNBQVMsRUFBRXdCLG1CQUFVQyxNQVJKO0FBU2pCdkIsRUFBQUEsUUFBUSxFQUFFNkIsaUJBVE87QUFVakI7QUFDQWpCLEVBQUFBLE9BQU8sRUFBRVUsbUJBQVVLLElBQVYsQ0FBZUQ7QUFYUCxDOztlQTJDTixrQkFDYjtBQUFBLE1BQUczQixhQUFILFFBQUdBLGFBQUg7QUFBQSxNQUFrQkQsU0FBbEIsUUFBa0JBLFNBQWxCO0FBQUEsTUFBNkJFLFFBQTdCLFFBQTZCQSxRQUE3QjtBQUFBLE1BQXVDWSxPQUF2QyxRQUF1Q0EsT0FBdkM7QUFBQSxTQUFzRDtBQUNwRGIsSUFBQUEsYUFBYSxFQUFiQSxhQURvRDtBQUVwREQsSUFBQUEsU0FBUyxFQUFUQSxTQUZvRDtBQUdwREUsSUFBQUEsUUFBUSxFQUFSQSxRQUhvRDtBQUlwRFksSUFBQUEsT0FBTyxFQUFQQTtBQUpvRCxHQUF0RDtBQUFBLENBRGEsRUFPYkgsZ0JBUGEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgd2l0aFNlYXJjaCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgU29ydGluZyB9IGZyb20gXCJAZWxhc3RpYy9yZWFjdC1zZWFyY2gtdWktdmlld3NcIjtcbmltcG9ydCBTb3J0TGlzdCBmcm9tIFwiLi4vdHlwZXMvU29ydExpc3RcIjtcblxuaW1wb3J0IHsgU29ydE9wdGlvbiB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5mdW5jdGlvbiBmaW5kU29ydE9wdGlvbihzb3J0T3B0aW9ucywgc29ydERhdGEpIHtcbiAgaWYgKHNvcnREYXRhLmluZGV4T2YoXCJ8fHxcIikgPT09IC0xKSB7XG4gICAgcmV0dXJuIHNvcnRPcHRpb25zLmZpbmQoXG4gICAgICBvcHRpb24gPT4gSlNPTi5zdHJpbmdpZnkob3B0aW9uLnZhbHVlKSA9PT0gc29ydERhdGFcbiAgICApO1xuICB9XG5cbiAgY29uc3QgW3ZhbHVlLCBkaXJlY3Rpb25dID0gc29ydERhdGEuc3BsaXQoXCJ8fHxcIik7XG5cbiAgcmV0dXJuIHNvcnRPcHRpb25zLmZpbmQoXG4gICAgb3B0aW9uID0+IG9wdGlvbi52YWx1ZSA9PT0gdmFsdWUgJiYgb3B0aW9uLmRpcmVjdGlvbiA9PT0gZGlyZWN0aW9uXG4gICk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKHNvcnRGaWVsZCwgc29ydERpcmVjdGlvbiwgc29ydExpc3QpIHtcbiAgaWYgKHNvcnRMaXN0ICYmIHNvcnRMaXN0Lmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc29ydExpc3QpO1xuICB9XG4gIHJldHVybiBgJHtzb3J0RmllbGR9fHx8JHtzb3J0RGlyZWN0aW9ufWA7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFNlbGVjdFZhbHVlcyhzb3J0T3B0aW9uKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHNvcnRPcHRpb24udmFsdWUpKSB7XG4gICAgLy8gc2F2ZSB2YWx1ZSBhcyBzdHJpbmcgZm9yIGNvbXBhcmlzb25cbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc29ydE9wdGlvbi52YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZvcm1hdFZhbHVlKHNvcnRPcHRpb24udmFsdWUsIHNvcnRPcHRpb24uZGlyZWN0aW9uKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmb3JtYXRTZWxlY3RPcHRpb24oc29ydE9wdGlvbikge1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiBzb3J0T3B0aW9uLm5hbWUsXG4gICAgdmFsdWU6IGZvcm1hdFNlbGVjdFZhbHVlcyhzb3J0T3B0aW9uKVxuICB9O1xufVxuZXhwb3J0IGNsYXNzIFNvcnRpbmdDb250YWluZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8vIFByb3BzXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNvcnRPcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihTb3J0T3B0aW9uKS5pc1JlcXVpcmVkLFxuICAgIHZpZXc6IFByb3BUeXBlcy5mdW5jLFxuICAgIC8vIFN0YXRlXG4gICAgc29ydERpcmVjdGlvbjogUHJvcFR5cGVzLm9uZU9mKFtcImFzY1wiLCBcImRlc2NcIiwgXCJcIl0pLFxuICAgIHNvcnRGaWVsZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzb3J0TGlzdDogU29ydExpc3QsXG4gICAgLy8gQWN0aW9uc1xuICAgIHNldFNvcnQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgbGFiZWwsXG4gICAgICBzZXRTb3J0LFxuICAgICAgc29ydERpcmVjdGlvbixcbiAgICAgIHNvcnRGaWVsZCxcbiAgICAgIHNvcnRMaXN0LFxuICAgICAgc29ydE9wdGlvbnMsXG4gICAgICB2aWV3LFxuICAgICAgLi4ucmVzdFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgVmlldyA9IHZpZXcgfHwgU29ydGluZztcblxuICAgIHJldHVybiBWaWV3KHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGxhYmVsLFxuICAgICAgb25DaGFuZ2U6IG8gPT4ge1xuICAgICAgICBjb25zdCBzb3J0T3B0aW9uID0gZmluZFNvcnRPcHRpb24oc29ydE9wdGlvbnMsIG8pO1xuICAgICAgICBzZXRTb3J0KHNvcnRPcHRpb24udmFsdWUsIHNvcnRPcHRpb24uZGlyZWN0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiBzb3J0T3B0aW9ucy5tYXAoZm9ybWF0U2VsZWN0T3B0aW9uKSxcbiAgICAgIHZhbHVlOiBmb3JtYXRWYWx1ZShzb3J0RmllbGQsIHNvcnREaXJlY3Rpb24sIHNvcnRMaXN0KSxcbiAgICAgIC4uLnJlc3RcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU2VhcmNoKFxuICAoeyBzb3J0RGlyZWN0aW9uLCBzb3J0RmllbGQsIHNvcnRMaXN0LCBzZXRTb3J0IH0pID0+ICh7XG4gICAgc29ydERpcmVjdGlvbixcbiAgICBzb3J0RmllbGQsXG4gICAgc29ydExpc3QsXG4gICAgc2V0U29ydFxuICB9KVxuKShTb3J0aW5nQ29udGFpbmVyKTtcbiJdfQ==