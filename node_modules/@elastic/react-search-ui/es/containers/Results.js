import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["className", "clickThroughTags", "resultView", "results", "shouldTrackClickThrough", "titleField", "urlField", "thumbnailField", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import PropTypes from "prop-types";
import React, { Component } from "react";
import { Result, Results } from "@elastic/react-search-ui-views";
import { withSearch } from "..";
import { Result as ResultContainer } from ".";
import { Result as ResultType } from "../types";

function getRaw(result, value) {
  if (!result[value] || !result[value].raw) return;
  return result[value].raw;
}

export var ResultsContainer = /*#__PURE__*/function (_Component) {
  _inherits(ResultsContainer, _Component);

  var _super = _createSuper(ResultsContainer);

  function ResultsContainer() {
    _classCallCheck(this, ResultsContainer);

    return _super.apply(this, arguments);
  }

  _createClass(ResultsContainer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          clickThroughTags = _this$props.clickThroughTags,
          resultView = _this$props.resultView,
          results = _this$props.results,
          shouldTrackClickThrough = _this$props.shouldTrackClickThrough,
          titleField = _this$props.titleField,
          urlField = _this$props.urlField,
          thumbnailField = _this$props.thumbnailField,
          view = _this$props.view,
          rest = _objectWithoutProperties(_this$props, _excluded);

      var View = view || Results;
      var ResultView = resultView || Result;
      return View(_objectSpread({
        className: className,
        children: results.map(function (result) {
          return /*#__PURE__*/React.createElement(ResultContainer, {
            key: "result-".concat(getRaw(result, "id")),
            titleField: titleField,
            urlField: urlField,
            thumbnailField: thumbnailField,
            view: ResultView,
            result: result,
            shouldTrackClickThrough: shouldTrackClickThrough,
            clickThroughTags: clickThroughTags
          });
        })
      }, rest));
    }
  }]);

  return ResultsContainer;
}(Component);

_defineProperty(ResultsContainer, "propTypes", {
  // Props
  className: PropTypes.string,
  clickThroughTags: PropTypes.arrayOf(PropTypes.string),
  resultView: PropTypes.func,
  titleField: PropTypes.string,
  urlField: PropTypes.string,
  thumbnailField: PropTypes.string,
  view: PropTypes.func,
  shouldTrackClickThrough: PropTypes.bool,
  // State
  results: PropTypes.arrayOf(ResultType).isRequired
});

_defineProperty(ResultsContainer, "defaultProps", {
  clickThroughTags: [],
  shouldTrackClickThrough: true
});

export default withSearch(function (_ref) {
  var results = _ref.results;
  return {
    results: results
  };
})(ResultsContainer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250YWluZXJzL1Jlc3VsdHMuanMiXSwibmFtZXMiOlsiUHJvcFR5cGVzIiwiUmVhY3QiLCJDb21wb25lbnQiLCJSZXN1bHQiLCJSZXN1bHRzIiwid2l0aFNlYXJjaCIsIlJlc3VsdENvbnRhaW5lciIsIlJlc3VsdFR5cGUiLCJnZXRSYXciLCJyZXN1bHQiLCJ2YWx1ZSIsInJhdyIsIlJlc3VsdHNDb250YWluZXIiLCJwcm9wcyIsImNsYXNzTmFtZSIsImNsaWNrVGhyb3VnaFRhZ3MiLCJyZXN1bHRWaWV3IiwicmVzdWx0cyIsInNob3VsZFRyYWNrQ2xpY2tUaHJvdWdoIiwidGl0bGVGaWVsZCIsInVybEZpZWxkIiwidGh1bWJuYWlsRmllbGQiLCJ2aWV3IiwicmVzdCIsIlZpZXciLCJSZXN1bHRWaWV3IiwiY2hpbGRyZW4iLCJtYXAiLCJzdHJpbmciLCJhcnJheU9mIiwiZnVuYyIsImJvb2wiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxLQUFQLElBQWdCQyxTQUFoQixRQUFpQyxPQUFqQztBQUNBLFNBQVNDLE1BQVQsRUFBaUJDLE9BQWpCLFFBQWdDLGdDQUFoQztBQUVBLFNBQVNDLFVBQVQsUUFBMkIsSUFBM0I7QUFDQSxTQUFTRixNQUFNLElBQUlHLGVBQW5CLFFBQTBDLEdBQTFDO0FBQ0EsU0FBU0gsTUFBTSxJQUFJSSxVQUFuQixRQUFxQyxVQUFyQzs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxNQUFoQixFQUF3QkMsS0FBeEIsRUFBK0I7QUFDN0IsTUFBSSxDQUFDRCxNQUFNLENBQUNDLEtBQUQsQ0FBUCxJQUFrQixDQUFDRCxNQUFNLENBQUNDLEtBQUQsQ0FBTixDQUFjQyxHQUFyQyxFQUEwQztBQUMxQyxTQUFPRixNQUFNLENBQUNDLEtBQUQsQ0FBTixDQUFjQyxHQUFyQjtBQUNEOztBQUVELFdBQWFDLGdCQUFiO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxXQW9CRSxrQkFBUztBQUNQLHdCQVdJLEtBQUtDLEtBWFQ7QUFBQSxVQUNFQyxTQURGLGVBQ0VBLFNBREY7QUFBQSxVQUVFQyxnQkFGRixlQUVFQSxnQkFGRjtBQUFBLFVBR0VDLFVBSEYsZUFHRUEsVUFIRjtBQUFBLFVBSUVDLE9BSkYsZUFJRUEsT0FKRjtBQUFBLFVBS0VDLHVCQUxGLGVBS0VBLHVCQUxGO0FBQUEsVUFNRUMsVUFORixlQU1FQSxVQU5GO0FBQUEsVUFPRUMsUUFQRixlQU9FQSxRQVBGO0FBQUEsVUFRRUMsY0FSRixlQVFFQSxjQVJGO0FBQUEsVUFTRUMsSUFURixlQVNFQSxJQVRGO0FBQUEsVUFVS0MsSUFWTDs7QUFhQSxVQUFNQyxJQUFJLEdBQUdGLElBQUksSUFBSWxCLE9BQXJCO0FBQ0EsVUFBTXFCLFVBQVUsR0FBR1QsVUFBVSxJQUFJYixNQUFqQztBQUVBLGFBQU9xQixJQUFJO0FBQ1RWLFFBQUFBLFNBQVMsRUFBRUEsU0FERjtBQUVUWSxRQUFBQSxRQUFRLEVBQUVULE9BQU8sQ0FBQ1UsR0FBUixDQUFZLFVBQUFsQixNQUFNO0FBQUEsOEJBQzFCLG9CQUFDLGVBQUQ7QUFDRSxZQUFBLEdBQUcsbUJBQVlELE1BQU0sQ0FBQ0MsTUFBRCxFQUFTLElBQVQsQ0FBbEIsQ0FETDtBQUVFLFlBQUEsVUFBVSxFQUFFVSxVQUZkO0FBR0UsWUFBQSxRQUFRLEVBQUVDLFFBSFo7QUFJRSxZQUFBLGNBQWMsRUFBRUMsY0FKbEI7QUFLRSxZQUFBLElBQUksRUFBRUksVUFMUjtBQU1FLFlBQUEsTUFBTSxFQUFFaEIsTUFOVjtBQU9FLFlBQUEsdUJBQXVCLEVBQUVTLHVCQVAzQjtBQVFFLFlBQUEsZ0JBQWdCLEVBQUVIO0FBUnBCLFlBRDBCO0FBQUEsU0FBbEI7QUFGRCxTQWNOUSxJQWRNLEVBQVg7QUFnQkQ7QUFyREg7O0FBQUE7QUFBQSxFQUFzQ3JCLFNBQXRDOztnQkFBYVUsZ0IsZUFDUTtBQUNqQjtBQUNBRSxFQUFBQSxTQUFTLEVBQUVkLFNBQVMsQ0FBQzRCLE1BRko7QUFHakJiLEVBQUFBLGdCQUFnQixFQUFFZixTQUFTLENBQUM2QixPQUFWLENBQWtCN0IsU0FBUyxDQUFDNEIsTUFBNUIsQ0FIRDtBQUlqQlosRUFBQUEsVUFBVSxFQUFFaEIsU0FBUyxDQUFDOEIsSUFKTDtBQUtqQlgsRUFBQUEsVUFBVSxFQUFFbkIsU0FBUyxDQUFDNEIsTUFMTDtBQU1qQlIsRUFBQUEsUUFBUSxFQUFFcEIsU0FBUyxDQUFDNEIsTUFOSDtBQU9qQlAsRUFBQUEsY0FBYyxFQUFFckIsU0FBUyxDQUFDNEIsTUFQVDtBQVFqQk4sRUFBQUEsSUFBSSxFQUFFdEIsU0FBUyxDQUFDOEIsSUFSQztBQVNqQlosRUFBQUEsdUJBQXVCLEVBQUVsQixTQUFTLENBQUMrQixJQVRsQjtBQVVqQjtBQUNBZCxFQUFBQSxPQUFPLEVBQUVqQixTQUFTLENBQUM2QixPQUFWLENBQWtCdEIsVUFBbEIsRUFBOEJ5QjtBQVh0QixDOztnQkFEUnBCLGdCLGtCQWVXO0FBQ3BCRyxFQUFBQSxnQkFBZ0IsRUFBRSxFQURFO0FBRXBCRyxFQUFBQSx1QkFBdUIsRUFBRTtBQUZMLEM7O0FBeUN4QixlQUFlYixVQUFVLENBQUM7QUFBQSxNQUFHWSxPQUFILFFBQUdBLE9BQUg7QUFBQSxTQUFrQjtBQUFFQSxJQUFBQSxPQUFPLEVBQVBBO0FBQUYsR0FBbEI7QUFBQSxDQUFELENBQVYsQ0FBMkNMLGdCQUEzQyxDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUmVzdWx0LCBSZXN1bHRzIH0gZnJvbSBcIkBlbGFzdGljL3JlYWN0LXNlYXJjaC11aS12aWV3c1wiO1xuXG5pbXBvcnQgeyB3aXRoU2VhcmNoIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBSZXN1bHQgYXMgUmVzdWx0Q29udGFpbmVyIH0gZnJvbSBcIi5cIjtcbmltcG9ydCB7IFJlc3VsdCBhcyBSZXN1bHRUeXBlIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5cbmZ1bmN0aW9uIGdldFJhdyhyZXN1bHQsIHZhbHVlKSB7XG4gIGlmICghcmVzdWx0W3ZhbHVlXSB8fCAhcmVzdWx0W3ZhbHVlXS5yYXcpIHJldHVybjtcbiAgcmV0dXJuIHJlc3VsdFt2YWx1ZV0ucmF3O1xufVxuXG5leHBvcnQgY2xhc3MgUmVzdWx0c0NvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLy8gUHJvcHNcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2xpY2tUaHJvdWdoVGFnczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gICAgcmVzdWx0VmlldzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdGl0bGVGaWVsZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB1cmxGaWVsZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0aHVtYm5haWxGaWVsZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB2aWV3OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzaG91bGRUcmFja0NsaWNrVGhyb3VnaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLy8gU3RhdGVcbiAgICByZXN1bHRzOiBQcm9wVHlwZXMuYXJyYXlPZihSZXN1bHRUeXBlKS5pc1JlcXVpcmVkXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBjbGlja1Rocm91Z2hUYWdzOiBbXSxcbiAgICBzaG91bGRUcmFja0NsaWNrVGhyb3VnaDogdHJ1ZVxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjbGlja1Rocm91Z2hUYWdzLFxuICAgICAgcmVzdWx0VmlldyxcbiAgICAgIHJlc3VsdHMsXG4gICAgICBzaG91bGRUcmFja0NsaWNrVGhyb3VnaCxcbiAgICAgIHRpdGxlRmllbGQsXG4gICAgICB1cmxGaWVsZCxcbiAgICAgIHRodW1ibmFpbEZpZWxkLFxuICAgICAgdmlldyxcbiAgICAgIC4uLnJlc3RcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IFZpZXcgPSB2aWV3IHx8IFJlc3VsdHM7XG4gICAgY29uc3QgUmVzdWx0VmlldyA9IHJlc3VsdFZpZXcgfHwgUmVzdWx0O1xuXG4gICAgcmV0dXJuIFZpZXcoe1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbjogcmVzdWx0cy5tYXAocmVzdWx0ID0+IChcbiAgICAgICAgPFJlc3VsdENvbnRhaW5lclxuICAgICAgICAgIGtleT17YHJlc3VsdC0ke2dldFJhdyhyZXN1bHQsIFwiaWRcIil9YH1cbiAgICAgICAgICB0aXRsZUZpZWxkPXt0aXRsZUZpZWxkfVxuICAgICAgICAgIHVybEZpZWxkPXt1cmxGaWVsZH1cbiAgICAgICAgICB0aHVtYm5haWxGaWVsZD17dGh1bWJuYWlsRmllbGR9XG4gICAgICAgICAgdmlldz17UmVzdWx0Vmlld31cbiAgICAgICAgICByZXN1bHQ9e3Jlc3VsdH1cbiAgICAgICAgICBzaG91bGRUcmFja0NsaWNrVGhyb3VnaD17c2hvdWxkVHJhY2tDbGlja1Rocm91Z2h9XG4gICAgICAgICAgY2xpY2tUaHJvdWdoVGFncz17Y2xpY2tUaHJvdWdoVGFnc31cbiAgICAgICAgLz5cbiAgICAgICkpLFxuICAgICAgLi4ucmVzdFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTZWFyY2goKHsgcmVzdWx0cyB9KSA9PiAoeyByZXN1bHRzIH0pKShSZXN1bHRzQ29udGFpbmVyKTtcbiJdfQ==